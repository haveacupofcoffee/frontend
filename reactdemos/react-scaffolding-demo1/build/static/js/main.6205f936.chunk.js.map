{"version":3,"sources":["redux/constans.js","redux/actions/count.js","containers/Count/index.jsx","containers/Person/index.jsx","redux/actions/person.js","App.jsx","redux/reducers/count.js","redux/reducers/person.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["CONSTS_FOR_COUNT","CONSTS_FOR_PERSON","increment","data","type","Count","value","selectElement","console","log","props","decrement","incrementIfCurrSumIsOdd","count","incrementAsync","this","personsCount","ref","s","onClick","Component","connect","state","persons","length","time","dispatch","setTimeout","Person","add","name","nameInputElement","age","ageInputElement","newPerson","id","nanoid","placeholder","input","map","person","App","countReducer","preState","action","initState","personReducer","combineReducers","createStore","allReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.6205f936.chunk.js","sourcesContent":["export const CONSTS_FOR_COUNT = {\r\n  INCREMENT: '+',\r\n  DECREMENT: '-'\r\n}\r\n\r\nexport const CONSTS_FOR_PERSON = {\r\n  ADD: 'add'\r\n}\r\n\r\n","import {CONSTS_FOR_COUNT} from '../constans'\r\n\r\nexport const increment = data => ({type:CONSTS_FOR_COUNT.INCREMENT, data})\r\nexport const decrement = data => ({type:CONSTS_FOR_COUNT.DECREMENT, data})\r\n\r\nexport const incrementAsync = (data,time) =>\r\n  dispatch => setTimeout(() => dispatch(increment(data)), time)\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport {\r\n  increment,\r\n  decrement,\r\n  incrementAsync\r\n} from '../../redux/actions/count';\r\n\r\n\r\n\r\nclass Count extends Component {\r\n\r\n\r\n  increment = () => {\r\n    const {value} = this.selectElement\r\n    console.log(value)\r\n    this.props.increment(value * 1)\r\n  }\r\n\r\n  decrement = () => {\r\n    const {value} = this.selectElement\r\n    this.props.decrement(value * 1)\r\n  }\r\n\r\n  incrementIfCurrSumIsOdd = () => {\r\n    const {value}  = this.selectElement\r\n    const {count} = this.props\r\n    if(count % 2 !== 0) {\r\n      this.props.increment(value * 1)\r\n    }\r\n  }\r\n\r\n  incrementAsync = () => {\r\n    const {value} = this.selectElement\r\n    this.props.incrementAsync(value * 1)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Current Sum: {this.props.count}</h2>\r\n        <h2>Number of Person: {this.props.personsCount}</h2>\r\n\r\n        <select ref={s => this.selectElement = s}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n\r\n        <button onClick={this.increment}>+</button>&nbsp;\r\n        <button onClick={this.decrement}>-</button>&nbsp;\r\n        <button onClick={this.incrementIfCurrSumIsOdd}>+ If Current Sum is Odd</button>&nbsp;\r\n        <button onClick={this.incrementAsync}>+ Async</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({count:state.count, personsCount:state.persons.length}),\r\n  {\r\n    increment,\r\n    decrement,\r\n    incrementAsync\r\n\r\n  }\r\n)(Count);","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {nanoid} from 'nanoid'\r\n\r\nimport {add} from '../../redux/actions/person';\r\n\r\n\r\n\r\nclass Person extends Component {\r\n\r\n  add = () => {\r\n    const name = this.nameInputElement.value\r\n    const age = this.ageInputElement.value * 1\r\n    const newPerson = {\r\n      id: nanoid(),\r\n      name,\r\n      age\r\n    }\r\n    this.props.add(newPerson)\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Sum from the Count component:{this.props.count}</h2>\r\n        <input type=\"text\" placeholder='name' ref={input => this.nameInputElement = input}/>&nbsp;\r\n        <input type=\"text\" placeholder='age' ref={input => this.ageInputElement = input}/>&nbsp;\r\n        <button onClick={this.add}>Add</button>\r\n        <h2>Persons</h2>\r\n        <ul>\r\n          {\r\n            this.props.persons.map(person => <li key={person.id}>{person.name} --- {person.age}</li>)\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({count:state.count, persons:state.persons}),\r\n  {\r\n    add\r\n  }\r\n)(Person);","import {CONSTS_FOR_PERSON} from '../constans'\r\n\r\nexport const add = person => ({type:CONSTS_FOR_PERSON.ADD, data:person})\r\n","import React, {Component} from 'react';\r\nimport Count from './containers/Count'\r\nimport Person from './containers/Person'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Count/>\r\n        <hr/>\r\n        <Person/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import {CONSTS_FOR_COUNT} from '../constans'\r\n\r\nconst intiState = 0\r\nconst countReducer = (preState = intiState,action) => {\r\n  const {type, data} = action\r\n  switch (type) {\r\n    case CONSTS_FOR_COUNT.INCREMENT:\r\n      return preState + data\r\n    case CONSTS_FOR_COUNT.DECREMENT:\r\n      return preState - data\r\n    default:\r\n      return preState\r\n  }\r\n}\r\n\r\nexport default countReducer\r\n","import {CONSTS_FOR_PERSON} from '../constans'\r\n\r\nconst initState = []\r\n\r\nconst personReducer = (preState = initState, action) => {\r\n  const {type, data}  = action\r\n  switch (type) {\r\n    case CONSTS_FOR_PERSON.ADD:\r\n      return [data, ...preState]\r\n    default:\r\n      return preState\r\n  }\r\n}\r\n\r\nexport default personReducer\r\n","import {combineReducers} from 'redux'\r\n\r\nimport countReducer from './count'\r\nimport personReducer from './person'\r\n\r\nexport default combineReducers(\r\n  {\r\n    count: countReducer,\r\n    persons:personReducer\r\n  }\r\n)","import {createStore, applyMiddleware} from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n\r\nimport thunk from 'redux-thunk'\r\n\r\nimport allReducers from './reducers'\r\n\r\nexport default createStore(allReducers, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\n\r\nimport App from './App'\r\nimport store from './redux/store'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}